# -*- coding: utf-8 -*-
"""
Created on Wed Mar 17 10:42:35 2021

@author: Kai
"""

"""
Triangle, pentagonal, and hexagonal numbers are generated by the following 
formulae:

Triangle	 	T_n=n(n+1)/2	 	1, 3, 6, 10, 15, ...
Pentagonal	 	P_n=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
Hexagonal	 	H_n=n(2n−1)	 	1, 6, 15, 28, 45, ...
It can be verified that T_285 = P_165 = H_143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""

import time
import numpy as np
start = time.time()


"""Create a list of hexagonal numbers"""
def hexagonal(start):
    lst = []
    for n in range(start, 100000):
        lst.append(n*(2*n - 1))
    
    return(lst)


"""Returns True if num is pentagonal and False if not."""
def is_pent(num):
    s = 24*num + 1
    s = (np.sqrt(s))
    s = (s + 1) / float(6)
    return(int(s) - s) == 0

"""Returns True if num is triangular and False if not."""
def is_triang(num):
    s = 1 + 8*num 
    s = (np.sqrt(s))
    s = (s - 1) / float(2)
    return(int(s) - s) == 0

""" checks each elemet of a list of hexagonal numbers and returns the 
the first that it finds that is triangular and pentagonal."""
def main():
    hex_list = hexagonal(144)
    
    for i in hex_list:
        if is_triang(i):
            if is_pent(i):
                return(i)
    
    return('Failed')



print(main())

end = time.time()
print('Runtime = ' + str(end - start)) 